{"ast":null,"code":"import{NavigationContainer,DefaultTheme,DarkTheme}from'@react-navigation/native';import{createStackNavigator}from'@react-navigation/stack';import*as React from'react';import NotFoundScreen from\"../screens/NotFoundScreen\";import BottomTabNavigator from\"./BottomTabNavigator\";import LinkingConfiguration from\"./LinkingConfiguration\";export default function Navigation(_ref){var colorScheme=_ref.colorScheme;return React.createElement(NavigationContainer,{linking:LinkingConfiguration,theme:colorScheme==='dark'?DarkTheme:DefaultTheme},React.createElement(RootNavigator,null));}var Stack=createStackNavigator();function RootNavigator(){return React.createElement(Stack.Navigator,{screenOptions:{headerShown:false}},React.createElement(Stack.Screen,{name:\"Root\",component:BottomTabNavigator}),React.createElement(Stack.Screen,{name:\"NotFound\",component:NotFoundScreen,options:{title:'Oops!'}}));}","map":{"version":3,"sources":["/home/mrmonotreme/Desktop/tmk/mobile_app/expo/TMK/navigation/index.tsx"],"names":["NavigationContainer","DefaultTheme","DarkTheme","createStackNavigator","React","NotFoundScreen","BottomTabNavigator","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","headerShown","title"],"mappings":"AAAA,OAASA,mBAAT,CAA8BC,YAA9B,CAA4CC,SAA5C,KAA6D,0BAA7D,CACA,OAASC,oBAAT,KAAqC,yBAArC,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CAGA,MAAOC,CAAAA,cAAP,iCAEA,MAAOC,CAAAA,kBAAP,4BACA,MAAOC,CAAAA,oBAAP,8BAIA,cAAe,SAASC,CAAAA,UAAT,MAAuE,IAAjDC,CAAAA,WAAiD,MAAjDA,WAAiD,CACpF,MACE,qBAAC,mBAAD,EACE,OAAO,CAAEF,oBADX,CAEE,KAAK,CAAEE,WAAW,GAAK,MAAhB,CAAyBP,SAAzB,CAAqCD,YAF9C,EAGE,oBAAC,aAAD,MAHF,CADF,CAOD,CAID,GAAMS,CAAAA,KAAK,CAAGP,oBAAoB,EAAlC,CAEA,QAASQ,CAAAA,aAAT,EAAyB,CACvB,MACE,qBAAC,KAAD,CAAO,SAAP,EAAiB,aAAa,CAAE,CAAEC,WAAW,CAAE,KAAf,CAAhC,EACE,oBAAC,KAAD,CAAO,MAAP,EAAc,IAAI,CAAC,MAAnB,CAA0B,SAAS,CAAEN,kBAArC,EADF,CAEE,oBAAC,KAAD,CAAO,MAAP,EAAc,IAAI,CAAC,UAAnB,CAA8B,SAAS,CAAED,cAAzC,CAAyD,OAAO,CAAE,CAAEQ,KAAK,CAAE,OAAT,CAAlE,EAFF,CADF,CAMD","sourcesContent":["import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { RootStackParamList } from '../types';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport LinkingConfiguration from './LinkingConfiguration';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}