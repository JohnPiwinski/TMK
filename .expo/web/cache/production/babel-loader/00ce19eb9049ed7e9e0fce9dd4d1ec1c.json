{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import*as React from'react';import{Component}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{Text,View}from\"../components/Themed\";import Image from\"react-native-web/dist/exports/Image\";import Button from\"react-native-web/dist/exports/Button\";import*as Speech from'expo-speech';import{TOPOKANJI}from\"../assets/kanji/topokanji.tsx\";var TabTwoScreen=function(_Component){_inherits(TabTwoScreen,_Component);var _super=_createSuper(TabTwoScreen);function TabTwoScreen(){var _this;_classCallCheck(this,TabTwoScreen);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={kanji_index:0,current_kanji:TOPOKANJI[0]};return _this;}_createClass(TabTwoScreen,[{key:\"render\",value:function render(){var _this2=this;var tryRequire=function tryRequire(path){try{return require(\"\"+path);}catch(err){console.error(err);return null;}};var styles=StyleSheet.create({container:{flex:1,alignItems:'center',justifyContent:'center'},title:{fontSize:20,fontWeight:'bold'},separator:{marginVertical:30,height:1,width:'80%'}});var path=\"http://localhost:8000/\"+this.state.kanji_index.toString()+\"/\"+Math.floor(Math.random()*10+20).toString()+\".png\";var image=tryRequire(path);console.log(path);console.log(\"Rerender \",image);return React.createElement(View,null,React.createElement(Image,{source:{uri:path},style:{height:'500%',width:'100%',alignSelf:'center'}}),React.createElement(Text,null,this.state.current_kanji[0]),React.createElement(Text,{style:{color:\"#777\",paddingTop:5}},this.state.current_kanji[this.state.kanji_index]),React.createElement(Button,{title:\"\\u8074\\u304F\",onPress:function onPress(){return Speech.speak(_this2.state.current_kanji,{language:\"ja-JP\",rate:0.7});}}),React.createElement(Button,{title:\"\\u5206\\u304B\\u308A\\u307E\\u3059\",onPress:function onPress(){_this2.state.current_kanji=TOPOKANJI[++_this2.state.kanji_index];console.log(_this2.state.current_kanji);_this2.forceUpdate();}}),React.createElement(Button,{title:\"\\u5206\\u304B\\u308A\\u307E\\u305B\\u3093\",onPress:function onPress(){return Speech.speak(current_kanji,{language:\"ja-JP\",rate:0.7});}}));}}]);return TabTwoScreen;}(Component);export{TabTwoScreen as default};","map":{"version":3,"sources":["/home/mrmonotreme/Desktop/tmk/mobile_app/expo/TMK/screens/TabTwoScreen.tsx"],"names":["React","Component","Text","View","Speech","TOPOKANJI","TabTwoScreen","state","kanji_index","current_kanji","tryRequire","path","require","err","console","error","styles","StyleSheet","create","container","flex","alignItems","justifyContent","title","fontSize","fontWeight","separator","marginVertical","height","width","toString","Math","floor","random","image","log","uri","alignSelf","color","paddingTop","speak","language","rate","forceUpdate"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Component} from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nimport { Image, Button } from \"react-native\";\n\nimport * as Speech from 'expo-speech';\n\nimport { TOPOKANJI } from '../assets/kanji/topokanji.tsx';\n\nexport default class TabTwoScreen extends Component {\n    state={\n        kanji_index: 0,\n        current_kanji: TOPOKANJI[0]\n    };\n\n    render() {\n        const tryRequire = (path) => {\n            try {\n                return require(`${path}`);\n            } catch (err) {\n                console.error(err)\n                return null;\n            }\n        };\n\n        const styles = StyleSheet.create({\n            container: {\n                flex: 1,\n                alignItems: 'center',\n                justifyContent: 'center',\n            },\n            title: {\n                fontSize: 20,\n                fontWeight: 'bold',\n            },\n            separator: {\n                marginVertical: 30,\n                height: 1,\n                width: '80%',\n            },\n        });\n        //let path = \"../assets/card_images/\" + this.state.kanji_index.toString() + \"/\" + Math.floor(Math.random() * 41) + \".png\"\n        let path = \"http://localhost:8000/\" + this.state.kanji_index.toString() + \"/\" + (Math.floor(Math.random() * 10 + 20)).toString() + \".png\";\n        let image = tryRequire(path);\n        console.log(path);\n        console.log(\"Rerender \", image);\n        return (\n            <View>\n            <Image\n            //source={image ? path : require(\"../assets/card_images/missing\")}\n            source={{uri: path}}\n            style={{\n                height: '500%',\n                    width:'100%',\n                    alignSelf:'center'\n            }}\n            />\n            <Text>{this.state.current_kanji[0]}</Text>\n            <Text style={{ color: \"#777\", paddingTop: 5 }}>\n            {this.state.current_kanji[this.state.kanji_index]}\n            </Text>\n            <Button title=\"聴く\" onPress={() => Speech.speak(this.state.current_kanji, {language: \"ja-JP\", rate: 0.7})} />\n            <Button title=\"分かります\" onPress={() => {this.state.current_kanji = TOPOKANJI[++this.state.kanji_index]; console.log(this.state.current_kanji); this.forceUpdate();}} />\n            <Button title=\"分かりません\" onPress={() => Speech.speak(current_kanji, {language: \"ja-JP\", rate: 0.7})} />\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}