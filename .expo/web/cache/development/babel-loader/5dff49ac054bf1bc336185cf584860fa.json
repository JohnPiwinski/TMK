{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/mrmonotreme/Desktop/tmk/mobile_app/expo/TMK/screens/TabTwoScreen.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View } from \"../components/Themed\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Speech from 'expo-speech';\nimport { TOPOKANJI } from \"../assets/kanji/topokanji.tsx\";\n\nvar TabTwoScreen = function (_Component) {\n  _inherits(TabTwoScreen, _Component);\n\n  var _super = _createSuper(TabTwoScreen);\n\n  function TabTwoScreen() {\n    var _this;\n\n    _classCallCheck(this, TabTwoScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      kanji_index: 0,\n      current_kanji: TOPOKANJI[0]\n    };\n    return _this;\n  }\n\n  _createClass(TabTwoScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var tryRequire = function tryRequire(path) {\n        try {\n          return require(\"\" + path);\n        } catch (err) {\n          return null;\n        }\n      };\n\n      var styles = StyleSheet.create({\n        container: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        title: {\n          fontSize: 20,\n          fontWeight: 'bold'\n        },\n        separator: {\n          marginVertical: 30,\n          height: 1,\n          width: '80%'\n        }\n      });\n      var path = \"../assets/card_images/\" + this.state.kanji_index.toString() + \"/\" + Math.floor(Math.random() * 41) + \".png\";\n      var image = tryRequire(path);\n      console.log(path);\n      console.log(\"Rerender \", image);\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: image ? image : require(\"../assets/card_images/missing\"),\n        style: {\n          height: '100%',\n          width: '100%',\n          alignSelf: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, this.state.current_kanji[0]), React.createElement(Text, {\n        style: {\n          color: \"#777\",\n          paddingTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, this.state.current_kanji[this.state.kanji_index]), React.createElement(Button, {\n        title: \"\\u8074\\u304F\",\n        onPress: function onPress() {\n          return Speech.speak(_this2.state.current_kanji, {\n            language: \"ja-JP\",\n            rate: 0.7\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        title: \"\\u5206\\u304B\\u308A\\u307E\\u3059\",\n        onPress: function onPress() {\n          _this2.state.current_kanji = TOPOKANJI[++_this2.state.kanji_index];\n          console.log(_this2.state.current_kanji);\n\n          _this2.forceUpdate();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        title: \"\\u5206\\u304B\\u308A\\u307E\\u305B\\u3093\",\n        onPress: function onPress() {\n          return Speech.speak(current_kanji, {\n            language: \"ja-JP\",\n            rate: 0.7\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return TabTwoScreen;\n}(Component);\n\nexport { TabTwoScreen as default };","map":{"version":3,"sources":["/home/mrmonotreme/Desktop/tmk/mobile_app/expo/TMK/screens/TabTwoScreen.tsx"],"names":["React","Component","Text","View","Speech","TOPOKANJI","TabTwoScreen","state","kanji_index","current_kanji","tryRequire","path","require","err","styles","StyleSheet","create","container","flex","alignItems","justifyContent","title","fontSize","fontWeight","separator","marginVertical","height","width","toString","Math","floor","random","image","console","log","alignSelf","color","paddingTop","speak","language","rate","forceUpdate"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Component} from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nimport { Image, Button } from \"react-native\";\n\nimport * as Speech from 'expo-speech';\n\nimport { TOPOKANJI } from '../assets/kanji/topokanji.tsx';\n\nexport default class TabTwoScreen extends Component {\n    state={\n        kanji_index: 0,\n        current_kanji: TOPOKANJI[0]\n    };\n\n    render() {\n        const tryRequire = (path) => {\n            try {\n                return require(`${path}`);\n            } catch (err) {\n                //console.error(\"Failed to find\" + path)\n                return null;\n            }\n        };\n\n        const styles = StyleSheet.create({\n            container: {\n                flex: 1,\n                alignItems: 'center',\n                justifyContent: 'center',\n            },\n            title: {\n                fontSize: 20,\n                fontWeight: 'bold',\n            },\n            separator: {\n                marginVertical: 30,\n                height: 1,\n                width: '80%',\n            },\n        });\n        let path = \"../assets/card_images/\" + this.state.kanji_index.toString() + \"/\" + Math.floor(Math.random() * 41) + \".png\"\n        let image = tryRequire(path);\n        console.log(path);\n        console.log(\"Rerender \", image);\n        return (\n            <View>\n            <Image\n            source={image ? image : require(\"../assets/card_images/missing\")}\n            style={{\n                height: '100%',\n                    width:'100%',\n                    alignSelf:'center'\n            }}\n            />\n            <Text>{this.state.current_kanji[0]}</Text>\n            <Text style={{ color: \"#777\", paddingTop: 5 }}>\n            {this.state.current_kanji[this.state.kanji_index]}\n            </Text>\n            <Button title=\"聴く\" onPress={() => Speech.speak(this.state.current_kanji, {language: \"ja-JP\", rate: 0.7})} />\n            <Button title=\"分かります\" onPress={() => {this.state.current_kanji = TOPOKANJI[++this.state.kanji_index]; console.log(this.state.current_kanji); this.forceUpdate();}} />\n            <Button title=\"分かりません\" onPress={() => Speech.speak(current_kanji, {language: \"ja-JP\", rate: 0.7})} />\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}